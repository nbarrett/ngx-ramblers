import express from "express";
import { sendTransactionalMail } from "./transactional-mail/send-transactional-mail";
import { queryAccount } from "./account/account";
import { queryTemplates } from "./templates/query-templates";
import { listCreate } from "./lists/list-create";
import { lists } from "./lists/lists";
import { contactsCreate } from "./contacts/contacts-create";
import { attributes } from "./contacts/contact-attributes";
import { contacts } from "./contacts/contacts";
import { contactUpdate } from "./contacts/contact-update";
import { contactsInList } from "./contacts/contacts-in-list";
import { contactsRemoveFromList } from "./contacts/contacts-remove-from-list";
import { contactsAddToList } from "./contacts/contacts-add-to-list";
import { folders } from "./folders/folders";
import { listDelete } from "./lists/list-delete";
import { contactsBatchUpdate } from "./contacts/contacts-batch-update";
import { contactsDelete } from "./contacts/contact-delete";
import { sendCampaign } from "./campaigns/send-campaign";
import { createCampaign } from "./campaigns/create-campaign";
import { querySegments } from "./segments/query-segements";
import { senders } from "./senders/senders";
import { createSender } from "./senders/create-sender";
import { listUpdate } from "./lists/list-update";
import * as authConfig from "../auth/auth-config";

const router = express.Router();

router.get("/folders", authConfig.authenticate(), folders);
router.get("/contacts", authConfig.authenticate(), contacts);
router.get("/contacts/list", contactsInList);
router.post("/contacts/delete", authConfig.authenticate(), contactsDelete);
router.post("/contacts/create", authConfig.authenticate(), contactsCreate);
router.post("/contacts/batch-update", authConfig.authenticate(), contactsBatchUpdate);
router.post("/contacts/add-to-list", authConfig.authenticate(), contactsAddToList);
router.post("/contacts/remove-from-list", authConfig.authenticate(), contactsRemoveFromList);
router.post("/contacts/update", authConfig.authenticate(), contactUpdate);
router.get("/contacts/attributes", authConfig.authenticate(), attributes);
router.get("/senders", authConfig.authenticate(), senders);
router.post("/senders/create", authConfig.authenticate(), createSender);
router.post("/transactional/send", authConfig.authenticate(), sendTransactionalMail);
router.post("/campaign/create", authConfig.authenticate(), createCampaign);
router.post("/campaign/send", authConfig.authenticate(), sendCampaign);
router.get("/segments", authConfig.authenticate(), querySegments);
router.post("/templates", authConfig.authenticate(), queryTemplates);
router.get("/lists", authConfig.authenticate(), lists);
router.delete("/lists/delete", authConfig.authenticate(), listDelete);
router.post("/lists/create", authConfig.authenticate(), listCreate);
router.post("/lists/update", authConfig.authenticate(), listUpdate);
router.get("/account", authConfig.authenticate(), queryAccount);
export const brevoRoutes = router;

name: Deploy to Selected Environments

on:
  workflow_dispatch:
    inputs:
      environments:
        description: 'Select environments to deploy to (space-separated or "all")'
        required: true
        default: 'all'
        type: string
      image_tag:
        description: 'Docker image tag to deploy (e.g., latest or a previous run number)'
        required: true
        default: 'latest'
        type: string

env:
  NODE_VERSION: '22.19.0'

jobs:
  set-environments:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create configs directory
        run: mkdir -p non-vcs/fly-io

      - name: Create configs.json from secrets
        env:
          CONFIGS_JSON: ${{ secrets.CONFIGS_JSON }}
        run: |
          echo "$CONFIGS_JSON" > non-vcs/fly-io/configs.json

      - id: set-matrix
        run: |
          if [ "${{ github.event.inputs.environments }}" = "all" ]; then
            jq -c '[.environments[].name]' non-vcs/fly-io/configs.json > envs.json
          else
            echo '["'${{ github.event.inputs.environments }}'"]' | sed 's/ /","/g' > envs.json
          fi
          echo "matrix=$(cat envs.json)" >> $GITHUB_OUTPUT

      - name: Cleanup sensitive files
        if: always()
        run: rm -f non-vcs/fly-io/configs.json

  deploy:
    needs: set-environments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.set-environments.outputs.matrix) }}
    name: Deploy to ${{ matrix.environment }}
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install root dependencies
        run: npm ci

      - name: Install server dependencies
        run: npm ci
        working-directory: ./server

      - name: Create configs directory
        run: mkdir -p non-vcs/fly-io

      - name: Create configs.json from secrets
        env:
          CONFIGS_JSON: ${{ secrets.CONFIGS_JSON }}
        run: |
          echo "$CONFIGS_JSON" > non-vcs/fly-io/configs.json

      - name: Install ts-node
        run: npm install -g ts-node

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Verify Flyctl Installation
        run: |
          echo "Flyctl path: $(which flyctl)"
          flyctl version
          echo "FLYCTL_PATH=$(which flyctl)" >> $GITHUB_ENV

      - name: Deploy to ${{ matrix.environment }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          ts-node server/deploy/deploy-to-environments.ts --environment "${{ matrix.environment }}" --image-tag "${{ github.event.inputs.image_tag }}"

      - name: Cleanup sensitive files
        if: always()
        run: rm -f non-vcs/fly-io/configs.json
